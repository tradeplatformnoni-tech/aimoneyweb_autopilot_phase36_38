#!/bin/zsh
# ==============================================================
# üß† NeoLight A.I. Wealth Mesh ‚Äî Unified Autopilot Master Script
# ==============================================================
# Handles: Startup, Auto-Fix, Phase Execution, and Dashboard
# ==============================================================

echo "üöÄ Launching NeoLight A.I. Autopilot Master..."
sleep 1

# --------------------------------------------------------------
# 1Ô∏è‚É£ Check Directories and Logs
# --------------------------------------------------------------
echo "üìÅ Verifying directories..."
mkdir -p logs cache runtime config dashboard scripts agents ai/risk ai/capital ai/providers
touch logs/autopilot_master.log runtime/portfolio.json runtime/goal_config.json

# --------------------------------------------------------------
# 2Ô∏è‚É£ Verify Virtual Environment
# --------------------------------------------------------------
if [ -z "$VIRTUAL_ENV" ]; then
  echo "‚ö†Ô∏è Virtual environment not active. Activating..."
  source venv/bin/activate
fi

# --------------------------------------------------------------
# 3Ô∏è‚É£ Quick Dependency Check + Fix
# --------------------------------------------------------------
echo "üì¶ Checking dependencies..."
deps=("requests" "pandas" "numpy" "pyyaml" "flask" "plotly")
for pkg in "${deps[@]}"; do
  python - <<PY || pip install "$pkg"
import importlib, sys
try:
    sys.exit(0 if importlib.util.find_spec("${pkg}") else 1)
except AttributeError:
    sys.exit(0)
PY
done

# --------------------------------------------------------------
# 4Ô∏è‚É£ Run Auto-Fix Pilot First
# --------------------------------------------------------------
if [ -f "./neolight_autofix_pilot.sh" ]; then
  echo "ü©∫ Running NeoLight-Fix first..."
  ./neolight_autofix_pilot.sh >> logs/autofix.log 2>&1
else
  echo "‚ö†Ô∏è AutoFix Pilot not found ‚Äî skipping..."
fi

# --------------------------------------------------------------
# 5Ô∏è‚É£ Run Core Autopilot (Phases 36‚Äì44)
# --------------------------------------------------------------
if [ -f "./phase_autopilot_neo.sh" ]; then
  echo "üß© Starting AI Wealth Autopilot..."
  ./phase_autopilot_neo.sh >> logs/phase_autopilot.log 2>&1
else
  echo "‚ö†Ô∏è phase_autopilot_neo.sh missing ‚Äî skipping..."
fi

# --------------------------------------------------------------
# 6Ô∏è‚É£ Run Dashboard (auto-detect free port)
# --------------------------------------------------------------
echo "üåç Launching NeoLight Dashboard..."
DEFAULT_PORT=5050
ALT_PORT=5051

if lsof -i :$DEFAULT_PORT >/dev/null 2>&1; then
  echo "‚ö†Ô∏è Port $DEFAULT_PORT in use ‚Äî switching to $ALT_PORT"
  PORT=$ALT_PORT
else
  PORT=$DEFAULT_PORT
fi

nohup python3 dashboard/flask_app.py --port $PORT > logs/dashboard.out 2>&1 &
sleep 3
echo "‚úÖ Dashboard running at: http://127.0.0.1:$PORT"

# --------------------------------------------------------------
# 7Ô∏è‚É£ Final Status Check
# --------------------------------------------------------------
echo "üß† NeoLight Master Autopilot Complete!"
echo "--------------------------------------------------------------"
echo "üìä Logs:       logs/autopilot_master.log"
echo "ü™ô Dashboard:  http://127.0.0.1:$PORT"
echo "ü©∫ AutoFix:    logs/autofix.log"
echo "‚öôÔ∏è Phases:     logs/phase_autopilot.log"
echo "--------------------------------------------------------------"

