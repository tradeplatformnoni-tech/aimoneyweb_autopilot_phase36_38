name: NeoLight CI/CD ‚Äî Build & Deploy (Phase 8100‚Äì10000)

on:
  push:
    branches: [ "main" ]
    paths:
      - "**/*.py"
      - "Dockerfile"
      - "requirements.txt"
      - "dashboard/**"
      - "k8s/**"
      - ".github/workflows/**"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # 1Ô∏è‚É£ Checkout Repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Docker Buildx
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3Ô∏è‚É£ Login to GitHub Container Registry (GHCR)
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.NEOLIGHT_GH_TOKEN }}

      # 4Ô∏è‚É£ Login to Docker Hub (for external deploys)
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5Ô∏è‚É£ Build and Push Docker image to both registries
      - name: Build and Push images
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/neolight-dashboard:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/neolight-dashboard:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 6Ô∏è‚É£ Deploy to Kubernetes
      - name: Deploy to Kubernetes (Canary)
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          echo "üöÄ Rolling out latest image to K8s..."
          kubectl set image deployment/neolight-dashboard dashboard=${{ secrets.DOCKERHUB_USERNAME }}/neolight-dashboard:latest --record || true
          kubectl rollout status deployment/neolight-dashboard || true

      # 7Ô∏è‚É£ Notify Pushover
      - name: Send Pushover Notification
        if: always()
        run: |
          curl -s \
            -F "token=${{ secrets.PUSHOVER_TOKEN }}" \
            -F "user=${{ secrets.PUSHOVER_USER }}" \
            -F "message=‚úÖ NeoLight Autopilot CI/CD completed successfully!" \
            https://api.pushover.net/1/messages.json

