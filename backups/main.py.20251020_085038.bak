from fastapi import FastAPI, WebSocket, WebSocketDisconnect
from fastapi.middleware.cors import CORSMiddleware
from fastapi.responses import HTMLResponse, FileResponse
import asyncio, os, datetime, random, json

app = FastAPI(title="AI Money Web :: Decentralized Mesh (101â€“110)")

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

@app.get("/")
def root():
    return {
        "message": "âœ… Decentralized AI Mesh active",
        "phase": "101â€“110",
        "timestamp": datetime.datetime.utcnow().isoformat(),
        "connections": random.randint(3, 9)
    }

@app.get("/dashboard", response_class=HTMLResponse)
def dashboard():
    return FileResponse("static/dashboard.html")

@app.websocket("/ws/mesh")
async def mesh_ws(ws: WebSocket):
    await ws.accept()
    try:
        while True:
            await ws.send_json({
                "exchange": random.choice(["Alpaca", "Binance", "Coinbase", "Kraken"]),
                "latency_ms": round(random.uniform(10, 120), 2),
                "connections": random.randint(1, 8),
                "pnl": round(random.uniform(-150, 200), 2),
                "timestamp": datetime.datetime.utcnow().isoformat()
            })
            await asyncio.sleep(3)
    except WebSocketDisconnect:
        print("ðŸ”Œ Client disconnected from / ws/mesh")
